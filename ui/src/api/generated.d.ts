/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Local Database */
        get: operations["list_local_database_api_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Products */
        get: operations["list_products_products_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** PaginatedResponse[Product] */
        PaginatedResponse_Product_: {
            meta: components["schemas"]["PaginationMeta"];
            /** Data */
            data: components["schemas"]["Product"][];
        };
        /** PaginationMeta */
        PaginationMeta: {
            /** Page */
            page: number;
            /** Page Size */
            page_size: number;
            /** Total Count */
            total_count: number;
            /** Has Next Page */
            has_next_page: boolean;
            /**
             * Last Data Update
             * Format: date-time
             */
            last_data_update: string;
        };
        /** Product */
        Product: {
            /** Id */
            id: string;
            /** Source Id */
            source_id: string;
            /** Domain Tld */
            domain_tld: string;
            /** Title */
            title: string;
            /** Description */
            description: string;
            /**
             * Product Url
             * Format: uri
             */
            product_url: string;
            /**
             * Source Created At
             * Format: date-time
             */
            source_created_at: string;
            /**
             * Source Updated At
             * Format: date-time
             */
            source_updated_at: string;
            /**
             * Retrieved At
             * Format: date-time
             */
            retrieved_at: string;
            /** Brand */
            brand: string;
            /**
             * Image Url
             * Format: uri
             */
            image_url: string;
            /** Price Min */
            price_min: number;
            /** Price Max */
            price_max: number;
            /** Variants */
            variants: components["schemas"]["ProductVariant"][];
        };
        /** ProductVariant */
        ProductVariant: {
            /** Id */
            id: string;
            /** Source Id */
            source_id: string;
            /** Product Id */
            product_id: string;
            /** Domain Tld */
            domain_tld: string;
            /** Title */
            title: string;
            /** Is Available */
            is_available: boolean;
            /** Price */
            price: number;
            /** Weight */
            weight: number;
            /**
             * Retrieved At
             * Format: date-time
             */
            retrieved_at: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    health_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_local_database_api_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_products_products_get: {
        parameters: {
            query?: {
                sort_by?: string;
                sort_order?: "asc" | "desc";
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_Product_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
